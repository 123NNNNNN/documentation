#!/bin/bash

# Variables
source $BASH_ENV

# Exit when any command fails
set -e

echo -e "\nProcessing commit $CIRCLE_SHA1"

# Prepare the environment
## Create the artifacts directory if needed
if [ ! -d "$ARTIFACTS_FULL_DIR" ]; then
  mkdir -p $ARTIFACTS_FULL_DIR
fi

## Create Subfolders for the tests artifacts
mkdir -p $ARTIFACTS_FULL_DIR/$MULTIDEV_NAME
mkdir -p $ARTIFACTS_FULL_DIR/live

# Lighthouse audits
## Run against Preview environment
cd $BUILD_PATH/gatsby
./node_modules/.bin/lhci collect --url=$MULTIDEV_SITE_URL

## Copy preview report files to ARTIFACTS_FULL_DIR
echo -e "\nCopying Results to $ARTIFACTS_FULL_DIR/$MULTIDEV_NAME..."
cp -r .lighthouseci/* $ARTIFACTS_FULL_DIR/$MULTIDEV_NAME

## Clean report target dir
rm -rf .lighthouseci/*

## Run against Production environment
cd $BUILD_PATH/gatsby
./node_modules/.bin/lhci collect --url=https://pantheon.io/docs

## Copy Production report files to ARTIFACTS_FULL_DIR
echo -e "\nCopying Results to $ARTIFACTS_FULL_DIR/live..."
cp -r .lighthouseci/* $ARTIFACTS_FULL_DIR/live


# Generate Vars
DEV_HTML_REPORTS="$ARTIFACTS_FULL_DIR/$MULTIDEV_NAME/"

if [ ! -f $DEV_HTML_REPORTS ]; then
	echo -e "\nDev HTML reports directory $DEV_HTML_REPORT not found!"
	exit 1
fi

REFERENCE_HTML_REPORTS="$ARTIFACTS_FULL_DIR/live/"

if [ ! -f $REFERENCE_HTML_REPORTS ]; then
	echo -e "\nReference HTML reports directory $REFERENCE_HTML_REPORTS not found!"
	exit 1
fi

DEV_HTML_REPORTS_URL="$ARTIFACTS_DIR_URL/$MULTIDEV_NAME/"
REFERENCE_HTML_REPORTS_URL="$ARTIFACTS_DIR_URL/live/"

PR_MESSAGE="Lighthouse audit results:\n- [Dev HTML Report]($DEV_HTML_REPORT_URL)\n- [Reference HTML Report]($REFERENCE_HTML_REPORT_URL)"

# Post the results back to the pull request on GitHub
# if not on the master branch
if [[ ${CI_BRANCH} != "master" ]];
then
  npm run lighthouse-pr-comment
fi

# Test Lighthouse results
#echo -e "\nTesting Lighthouse results..."
#npm run lighthouse-test

#Comment on Commit
curl -d '{ "body": "Artifacts: '$ARTIFACTS_DIR_URL'" }' -X POST https://api.github.com/repos/pantheon-systems/documentation/commits/$CIRCLE_SHA1/comments?access_token=$GITHUB_TOKEN